{"mappings":"AAAA,MAAM,kBAAkB,SAAS,cAAc;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE;IACF;AACF;AAEA,wCAAwC;AACxC,MAAM,aAAa;IACjB,IAAI;QACF,MAAM,WAAW,MAAM,MACrB;QAEF,oFAAoF;QAEpF,sIAAsI;QACtI,MAAM,OAAO,MAAM,SAAS;QAE5B,IAAI,CAAC,SAAS,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,EAAE,SAAS,OAAO,CAAC,CAAC;QAExE,QAAQ,IAAI,MAAM;QAClB,iCAAiC;QACjC,kDAAkD;QAClD,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK;QACtB,SAAS;YACP,IAAI,OAAO;YACX,OAAO,OAAO;YACd,WAAW,OAAO;YAClB,WAAW,OAAO;YAClB,OAAO,OAAO;YACd,UAAU,OAAO;YACjB,aAAa,OAAO;YACpB,aAAa,OAAO;QACtB;QACA,QAAQ,IAAI;IACd,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    });\n  });\n};\n\n// make AJAX request to an API use fetch\nconst showRecipe = async function () {\n  try {\n    const response = await fetch(\n      \"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\"\n    );\n    // fetch will return a promise, as its in async function can then await that promise\n\n    // convert to JSON - json method is available on all response objects. Response object is exactly what the fetch function here returns\n    const data = await response.json();\n\n    if (!response.ok) throw new Error(`${data.message} (${response.status})`);\n\n    console.log(data, response);\n    // let recipe = data.data.recipe;\n    // recipes on both sides so able use destructuring\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceURL: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n    console.log(recipe);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}